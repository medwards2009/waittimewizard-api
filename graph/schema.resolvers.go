package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/medwards2009/waittimewizard-api/graph/model"
)

// Destinations is the resolver for the destinations field.
func (r *queryResolver) Destinations(ctx context.Context) ([]*model.Destination, error) {
	resp, err := http.Get("https://api.themeparks.wiki/v1/destinations")

	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	// Unmarshal the response into a map to extract the destinations field
	var result map[string]json.RawMessage
	if err := json.NewDecoder(resp.Body).Decode(&result); err != nil {
		return nil, err
	}
	var destinations []*model.Destination
	if err := json.Unmarshal(result["destinations"], &destinations); err != nil {
		return nil, err
	}

	return destinations, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
